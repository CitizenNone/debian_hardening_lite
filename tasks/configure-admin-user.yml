- name: Create user {{ ssh_admin_user }}
  ansible.builtin.user:
    name: "{{ ssh_admin_user }}"
    shell: /bin/bash
    groups: sudo, adm
    append: true
    create_home: true
    generate_ssh_key: true
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    password_expire_warn: 5
    password_expire_account_disable: 10
  when: ssh_key_auth_enabled

- name: Check if SSH public key exists locally
  ansible.builtin.stat:
    path: "{{ ssh_admin_key_path }}"
  delegate_to: localhost
  register: local_ssh_key
  when: ssh_key_auth_enabled

- name: Fail if no SSH key is found
  ansible.builtin.fail:
    msg: "SSH public key not found at {{ ssh_admin_key_path }}. Please generate one with ssh-keygen."
  when: ssh_key_auth_enabled and not local_ssh_key.stat.exists

- name: Read public SSH key
  ansible.builtin.slurp:
    src: "{{ ssh_admin_key_path }}"
  register: ssh_key_content
  delegate_to: localhost
  when: ssh_key_auth_enabled

- name: Ensure .ssh directory exists
  ansible.builtin.file:
    path: "/home/{{ ssh_admin_user }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ ssh_admin_user }}"
    group: "{{ ssh_admin_user }}"
  when: ssh_key_auth_enabled

- name: Ensure authorized_keys file exists
  ansible.builtin.file:
    path: "/home/{{ ssh_admin_user }}/.ssh/authorized_keys"
    state: touch
    mode: '0600'
    owner: "{{ ssh_admin_user }}"
    group: "{{ ssh_admin_user }}"
  when: ssh_key_auth_enabled

- name: Add public key to authorized keys for {{ ssh_admin_user }}
  ansible.builtin.lineinfile:
    path: /home/{{ ssh_admin_user }}/.ssh/authorized_keys
    line: "{{ ssh_key_content['content'] | b64decode }}"
  when: ssh_key_auth_enabled
